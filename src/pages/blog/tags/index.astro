---
import BlogLayout from '../../../layouts/BlogLayout.astro';
import EmptyState from '../../../components/EmptyState';
import Link from '../../../components/Link';

import { getBlogInfo, getAllTags } from '../../../hashnode-lib/client';
import type { TagCountInfo } from '../../../hashnode-lib/schema';

export const prerender = false

const blogInfo = await getBlogInfo();
const tags: TagCountInfo[] = await getAllTags();

const columns =
  tags.length === 1
    ? 'grid-cols-1'
    : (tags.length ===2
      ? 'grid-cols-2'
      : 'sm:grid-cols-2 md:grid-cols-3');

const title = "Blog Tags | " + blogInfo.title + " by " + blogInfo.author.name;
const description = "Explore topics covered in this blog.";
const keywords = "blog tags, defined behavior, software engineering, structured insight";
const image = blogInfo.ogMetaData?.image;
---
<BlogLayout
  noindex={true}
  title={title}
  description={description}
  keywords={keywords}
  image={image}
  showBanner={false}
  sourceNoteUsername={blogInfo.author.username}
>
  {tags.length > 0 ? (
    <!-- Sort toggle -->
    <div slot="blog-header" class="mb-4">
      <h1 class="text-center">Browse Tags</h1>
      <div class="flex justify-center items-center">
        <label class="mr-2" for="sort-mode">Sort by:</label>
        <select id="sort-mode" class="bg-bg border border-muted px-2 py-1 text-sm rounded">
          <option value="count">Most used</option>
          <option value="name">Name (A–Z)</option>
        </select>
      </div>
    </div>

    <!-- Tag grid -->
    <div id="tag-grid" class=`grid gap-4 max-w-xl mx-auto items-center ${columns}`>
      {tags.map(tag => (
        <div
          class="card p-4"
          data-name={tag.name.toLowerCase()}
          data-count={tag.count}
        >
          <Link href={`/blog/tags/${tag.slug}`}>
            #{tag.name}
          </Link>
          <p class="text-sm text-muted mt-1">{tag.count} post{tag.count > 1 ? 's' : ''}</p>
        </div>
      ))}
    </div>

    <!-- Sort script -->
    <script is:inline>
      const sortSelect = document.getElementById('sort-mode');
      const grid = document.getElementById('tag-grid');

      sortSelect.addEventListener('change', () => {
        const mode = sortSelect.value;
        const items = Array.from(grid.children);

        const sorted = items.sort((a, b) => {
          if (mode === 'name') {
            return a.dataset.name.localeCompare(b.dataset.name);
          } else if (mode === 'count') {
            return Number(b.dataset.count) - Number(a.dataset.count);
          }
          return 0;
        });

        sorted.forEach(el => grid.appendChild(el));
      });

      // Trigger initial sort based on default selected option
      window.addEventListener('DOMContentLoaded', () => {
        sortSelect.dispatchEvent(new Event('change'));
      });
    </script>
  ) : (
    <EmptyState
      icon="🏷️"
      title="No tags yet"
      message="Once posts are published, their tags will appear here."
    />
  )}
</BlogLayout>
